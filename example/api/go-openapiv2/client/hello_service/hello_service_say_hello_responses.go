// Code generated by go-swagger; DO NOT EDIT.

package hello_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sdinsure/agent/example/api/go-openapiv2/models"
)

// HelloServiceSayHelloReader is a Reader for the HelloServiceSayHello structure.
type HelloServiceSayHelloReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HelloServiceSayHelloReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHelloServiceSayHelloOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewHelloServiceSayHelloDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewHelloServiceSayHelloOK creates a HelloServiceSayHelloOK with default headers values
func NewHelloServiceSayHelloOK() *HelloServiceSayHelloOK {
	return &HelloServiceSayHelloOK{}
}

/*
HelloServiceSayHelloOK describes a response with status code 200, with default header values.

A successful response.
*/
type HelloServiceSayHelloOK struct {
	Payload *models.APIHelloResponse
}

// IsSuccess returns true when this hello service say hello o k response has a 2xx status code
func (o *HelloServiceSayHelloOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this hello service say hello o k response has a 3xx status code
func (o *HelloServiceSayHelloOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this hello service say hello o k response has a 4xx status code
func (o *HelloServiceSayHelloOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this hello service say hello o k response has a 5xx status code
func (o *HelloServiceSayHelloOK) IsServerError() bool {
	return false
}

// IsCode returns true when this hello service say hello o k response a status code equal to that given
func (o *HelloServiceSayHelloOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the hello service say hello o k response
func (o *HelloServiceSayHelloOK) Code() int {
	return 200
}

func (o *HelloServiceSayHelloOK) Error() string {
	return fmt.Sprintf("[GET /v1/hello][%d] helloServiceSayHelloOK  %+v", 200, o.Payload)
}

func (o *HelloServiceSayHelloOK) String() string {
	return fmt.Sprintf("[GET /v1/hello][%d] helloServiceSayHelloOK  %+v", 200, o.Payload)
}

func (o *HelloServiceSayHelloOK) GetPayload() *models.APIHelloResponse {
	return o.Payload
}

func (o *HelloServiceSayHelloOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHelloResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHelloServiceSayHelloDefault creates a HelloServiceSayHelloDefault with default headers values
func NewHelloServiceSayHelloDefault(code int) *HelloServiceSayHelloDefault {
	return &HelloServiceSayHelloDefault{
		_statusCode: code,
	}
}

/*
HelloServiceSayHelloDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type HelloServiceSayHelloDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this hello service say hello default response has a 2xx status code
func (o *HelloServiceSayHelloDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this hello service say hello default response has a 3xx status code
func (o *HelloServiceSayHelloDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this hello service say hello default response has a 4xx status code
func (o *HelloServiceSayHelloDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this hello service say hello default response has a 5xx status code
func (o *HelloServiceSayHelloDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this hello service say hello default response a status code equal to that given
func (o *HelloServiceSayHelloDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the hello service say hello default response
func (o *HelloServiceSayHelloDefault) Code() int {
	return o._statusCode
}

func (o *HelloServiceSayHelloDefault) Error() string {
	return fmt.Sprintf("[GET /v1/hello][%d] HelloService_SayHello default  %+v", o._statusCode, o.Payload)
}

func (o *HelloServiceSayHelloDefault) String() string {
	return fmt.Sprintf("[GET /v1/hello][%d] HelloService_SayHello default  %+v", o._statusCode, o.Payload)
}

func (o *HelloServiceSayHelloDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *HelloServiceSayHelloDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
