// Code generated by go-swagger; DO NOT EDIT.

package hello_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewHelloServiceSayHelloParams creates a new HelloServiceSayHelloParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewHelloServiceSayHelloParams() *HelloServiceSayHelloParams {
	return &HelloServiceSayHelloParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewHelloServiceSayHelloParamsWithTimeout creates a new HelloServiceSayHelloParams object
// with the ability to set a timeout on a request.
func NewHelloServiceSayHelloParamsWithTimeout(timeout time.Duration) *HelloServiceSayHelloParams {
	return &HelloServiceSayHelloParams{
		timeout: timeout,
	}
}

// NewHelloServiceSayHelloParamsWithContext creates a new HelloServiceSayHelloParams object
// with the ability to set a context for a request.
func NewHelloServiceSayHelloParamsWithContext(ctx context.Context) *HelloServiceSayHelloParams {
	return &HelloServiceSayHelloParams{
		Context: ctx,
	}
}

// NewHelloServiceSayHelloParamsWithHTTPClient creates a new HelloServiceSayHelloParams object
// with the ability to set a custom HTTPClient for a request.
func NewHelloServiceSayHelloParamsWithHTTPClient(client *http.Client) *HelloServiceSayHelloParams {
	return &HelloServiceSayHelloParams{
		HTTPClient: client,
	}
}

/*
HelloServiceSayHelloParams contains all the parameters to send to the API endpoint

	for the hello service say hello operation.

	Typically these are written to a http.Request.
*/
type HelloServiceSayHelloParams struct {

	// Greeting.
	Greeting *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the hello service say hello params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *HelloServiceSayHelloParams) WithDefaults() *HelloServiceSayHelloParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the hello service say hello params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *HelloServiceSayHelloParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the hello service say hello params
func (o *HelloServiceSayHelloParams) WithTimeout(timeout time.Duration) *HelloServiceSayHelloParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the hello service say hello params
func (o *HelloServiceSayHelloParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the hello service say hello params
func (o *HelloServiceSayHelloParams) WithContext(ctx context.Context) *HelloServiceSayHelloParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the hello service say hello params
func (o *HelloServiceSayHelloParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the hello service say hello params
func (o *HelloServiceSayHelloParams) WithHTTPClient(client *http.Client) *HelloServiceSayHelloParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the hello service say hello params
func (o *HelloServiceSayHelloParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGreeting adds the greeting to the hello service say hello params
func (o *HelloServiceSayHelloParams) WithGreeting(greeting *string) *HelloServiceSayHelloParams {
	o.SetGreeting(greeting)
	return o
}

// SetGreeting adds the greeting to the hello service say hello params
func (o *HelloServiceSayHelloParams) SetGreeting(greeting *string) {
	o.Greeting = greeting
}

// WriteToRequest writes these params to a swagger request
func (o *HelloServiceSayHelloParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Greeting != nil {

		// query param greeting
		var qrGreeting string

		if o.Greeting != nil {
			qrGreeting = *o.Greeting
		}
		qGreeting := qrGreeting
		if qGreeting != "" {

			if err := r.SetQueryParam("greeting", qGreeting); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
